<?xml version="1.0" encoding="utf-8"?>
<!-- Created by Leo: http://leoeditor.com/leo_toc.html -->
<leo_file xmlns:leo="http://leoeditor.com/namespaces/leo-python-editor/1.1" >
<leo_header file_format="2" tnodes="0" max_tnode_index="0" clone_windows="0"/>
<globals body_outline_ratio="0.5" body_secondary_ratio="0.5">
	<global_window_position top="50" left="50" height="500" width="700"/>
	<global_log_window_position top="0" left="0" height="0" width="0"/>
</globals>
<preferences/>
<find_panel_settings/>
<vnodes>
<v t="yen.20170108171605.1"><vh>@settings</vh>
<v t="yen.20170108171605.2"><vh>@data qt-gui-plugin-style-sheet</vh></v>
<v t="yen.20170108171605.3"><vh>@string initial_split_orientation = horizontal</vh></v>
</v>
<v t="yen.20170108171622.1"><vh>有關 2017springwcm</vh></v>
<v t="yen.20170108171733.1" a="E"><vh>@path ../</vh>
<v t="yen.20170108171733.2"><vh>@button pelican-blog</vh></v>
<v t="yen.20170108171733.3"><vh>@edit README.md</vh></v>
<v t="yen.20170108171733.4"><vh>@edit .gitignore</vh></v>
<v t="yen.20170108171733.5"><vh>Pelican 設定</vh>
<v t="yen.20170108171733.6"><vh>@edit local_publishconf.py</vh></v>
<v t="yen.20170108171733.7"><vh>@edit pelicanconf.py</vh></v>
</v>
<v t="yen.20170224232341.1" a="E"><vh>編輯 template</vh>
<v t="yen.20170224232341.2" a="E"><vh>@path theme/pelican-bootstrap3_local/templates</vh>
<v t="yen.20170224232341.3"><vh>@edit base.html</vh></v>
</v>
</v>
<v t="yen.20170108171733.8" a="E"><vh>@clean index.html</vh>
<v t="yen.20170108171733.9" a="E"><vh>html</vh>
<v t="yen.20170108171733.10"><vh>head</vh></v>
<v t="yen.20170108171733.11" a="E"><vh>body</vh>
<v t="yen.20170108171733.12" a="E"><vh>reveal div</vh>
<v t="yen.20170108171733.13" a="E"><vh>slides div</vh>
<v t="yen.20170108171733.14" a="E"><vh>封面投影片</vh>
<v t="yen.20170108171733.15"><vh>封面投影片內容</vh></v>
</v>
<v t="yen.20170108171733.16" a="E"><vh>page1</vh>
<v t="leo.20170628125915.1"><vh>上課筆記</vh></v>
</v>
<v t="yen.20170108171733.65" a="E"><vh>page2</vh>
<v t="leo.20170628130636.1"><vh>上課筆記</vh></v>
</v>
<v t="yen.20170108171733.67" a="E"><vh>page3</vh>
<v t="leo.20170628160738.1"><vh>IPV6網路設定</vh></v>
</v>
<v t="leo.20170628125830.1" a="E"><vh>page4</vh>
<v t="leo.20170628152125.1"><vh>上課筆記</vh></v>
</v>
<v t="leo.20170628152052.1" a="E"><vh>page6</vh>
<v t="yen.20170108171733.17"><vh>virtualbox中啟動 stunnel(上)</vh></v>
</v>
<v t="leo.20170628174459.1" a="E"><vh>page10</vh>
<v t="leo.20170628174508.1"><vh>virtualbox中啟動 stunnel(下)</vh></v>
</v>
<v t="leo.20170628172759.1" a="E"><vh>page9</vh>
<v t="leo.20170628172805.1"><vh>virtualbox中啟動 stunnel影片</vh></v>
</v>
<v t="yen.20170108171733.64" a="E"><vh>page5</vh>
<v t="yen.20170108171733.68"><vh>在近端啟動 CMsimfly</vh></v>
</v>
<v t="leo.20170628212708.1" a="E"><vh>page11</vh>
<v t="leo.20170628212707.1"><vh>在近端啟動 CMsimfly影片</vh></v>
</v>
<v t="leo.20170628152117.1" a="E"><vh>page7</vh>
<v t="yen.20170108171733.66"><vh>在 ubuntu 中安裝 nginx 伺服</vh></v>
</v>
<v t="leo.20170628171821.1" a="E"><vh>page8</vh>
<v t="leo.20170628171848.1"><vh>在 ubuntu 中安裝 nginx 伺服影片</vh></v>
</v>
<v t="leo.20170628213338.1" a="E"><vh>page12</vh>
<v t="leo.20170628213337.1"><vh>putty的相關設定</vh></v>
</v>
<v t="leo.20170628213916.1" a="E"><vh>page2</vh>
<v t="leo.20170628213915.1"><vh>putty的相關設定影片</vh></v>
</v>
</v>
</v>
</v>
</v>
</v>
<v t="yen.20170108171733.71" a="E"><vh>@path content</vh>
<v t="yen.20170108171733.72"><vh>@edit 20170625.md</vh></v>
<v t="yen.20170219101403.1"><vh>@edit 20170626.md</vh></v>
<v t="leo.20170303144114.1"><vh>@edit 20170627.md</vh></v>
<v t="yen.20170304100133.1"><vh>@edit 20170628.md</vh></v>
<v t="yen.20170304100907.1"><vh>@edit 20170624.md</vh></v>
<v t="yen.20170417151414.1"><vh>@edit 20170417.md</vh></v>
<v t="yen.20170618211552.1"><vh>@edit 20170618.md</vh></v>
<v t="yen.20170108171733.81" a="E"><vh>@path pages</vh>
<v t="yen.20170108171733.82"><vh>@edit pages_1.md</vh></v>
</v>
</v>
<v t="yen.20170108171733.83"><vh>產生 .key 與 .crt</vh></v>
</v>
<v t="yen.20170108171930.1"><vh>@button https server</vh></v>
<v t="yen.20170108171939.1"><vh>@button ipv6 https server</vh></v>
</vnodes>
<tnodes>
<t tx="leo.20170628125830.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;</t>
<t tx="leo.20170628125915.1">###上課筆記
MBR = Master Boot Record 主開機紀錄

SSD = Solid State Disk 固態硬碟

SCSL = Small Computer System Interface 小型電腦介面

redundant 多餘的

Raid 磁碟陣列

replication 自我複製

get pip 套件管理 pyqt5

pull request 軟性改版
</t>
<t tx="leo.20170628130636.1">###上課筆記
何謂機械設計

何謂機械

要能夠精巧配置的東西  除了流體、固體還有液體

機：左邊為木頭 、右邊為幾，幾代表很多的元件

械：戒的意思是控制在一個範圍內，器物本身有特定功能

何謂設計

設計是一種表達

設：左邊是言--代表說話，請別人去做

計：經過很多討論、很多考量
</t>
<t tx="leo.20170628152052.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;</t>
<t tx="leo.20170628152117.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;</t>
<t tx="leo.20170628152125.1">###製作網路線

網路線有兩種規格T568A與T568B

T568A： 綠白    綠    橘白    藍    藍白    橘    棕白    棕

T568B： 橘白    橘    綠    藍    藍白    綠    棕白    棕

兩種同規格的頭在一條線就為網路線

如果是不同規格的，那就是跳線 

跳線可用來作為傳輸兩台電腦之間的橋梁</t>
<t tx="leo.20170628160738.1">###IPV6網路設定
在控制台裡打開網路-&gt;內容-&gt;ipv6-&gt;DNS分別輸入

2001:288:6004:17::254 系館

2001:288:b000:168::1 中華電信

或是直接在proxy設定proxy.kmol.info

用ping6可以知道現在網路的位置

用ipconfig /all 查ip 看到fe80開頭的為內部IP

 
</t>
<t tx="leo.20170628171821.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;</t>
<t tx="leo.20170628171848.1">###在 ubuntu 中安裝 nginx 伺服影片


###X

&lt;iframe src="https://player.vimeo.com/video/215033333" width="640" height="360" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;&lt;a href="https://vimeo.com/215033333"&gt;&lt;/a&gt; </t>
<t tx="leo.20170628172759.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;</t>
<t tx="leo.20170628172805.1">###virtualbox中啟動 stunnel影片

###X
&lt;iframe src="https://player.vimeo.com/video/215008801" width="640" height="360" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;&lt;a href="https://vimeo.com/215008801"&gt;
&lt;/a&gt; </t>
<t tx="leo.20170628174459.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;</t>
<t tx="leo.20170628174508.1">sudo vi /etc/stunnel/stunnel.conf 改寫 stunnel.conf

[https]

 accept = your_IPv4_ip:443
   
 accept = :::443
   
 cert = /etc/stunnel/localhost.crt
   
 key = /etc/stunnel/localhost.key
   
 exec = /usr/bin/fossil
   
 execargs = /usr/bin/fossil http /home/user/repository/mde2a1.fossil -- https --nojail

/etc/init.d/stunnel4 restart 重新啟動 stunnel4 </t>
<t tx="leo.20170628212707.1">###在近端啟動 CMsimfly
###X
&lt;iframe src="https://player.vimeo.com/video/215030751" width="640" height="360" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;&lt;a href="https://vimeo.com/215030751"&gt;&lt;/a&gt; </t>
<t tx="leo.20170628212708.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;</t>
<t tx="leo.20170628213337.1">###putty的相關設定

在hostname輸入自己組別的名稱(ex:wcmg7.kmol.info)

到proxy裡在proxy hostname打上proxy.kmol.info 

port輸入3128之後案save存檔 

在案open就可以連上各組的電腦了


</t>
<t tx="leo.20170628213338.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;</t>
<t tx="leo.20170628213915.1">###putty的相關設定
###X
&lt;iframe src="https://player.vimeo.com/video/223414827" width="640" height="360" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;&lt;a href="https://vimeo.com/223414827"&gt;&lt;/a&gt;</t>
<t tx="leo.20170628213916.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;</t>
<t tx="yen.20170108171605.1"></t>
<t tx="yen.20170108171605.2">QTreeWidget {
    /* These apply to the selected item, but not to editing items.*/
    background-color: #ffffec; /* Leo's traditional tree color */
    selection-color: black; /* was white */
    selection-background-color: lightgrey;
    /* font-family: SansSerif; */
    /*font-family: DejaVu Sans Mono;*/
    font-family:YaHei Mono;
    /* 標題字型大小設定 */
    font-size: 20px;
    font-weight: normal; /* normal,bold,100,..,900 */
    font-style: normal; /* normal, italic,oblique */
 }

/* Headline edit widgets */
QTreeWidget QLineEdit {
    background-color: cornsilk;
    selection-color: white;
    selection-background-color: blue;
    /*font-family: DejaVu Sans Mono;*/    
    font-family:YaHei Mono;
    /* 沒有特別對應字型大小 */
    font-size: 20px;
    font-weight: normal; /* normal,bold,100,..,900 */
    font-style: normal; /* normal, italic,oblique */
}

/* The log panes */
QTextEdit {
    background-color: #f2fdff;
    selection-color: red;
    selection-background-color: blue;
    /* font-family: Courier New; */
    font-family:YaHei Mono;
    /* log font 大小 */
    font-size: 20px;
    font-weight: normal; /* normal,bold,100,..,900 */
    font-style: normal; /* normal, italic,oblique */
}

/* The body pane */
QTextEdit#richTextEdit {
    background-color: #fdf5f5; /* A kind of pink. */
    selection-color: white;
    selection-background-color: red;
    /*font-family: DejaVu Sans Mono;*/
    /* font-family: Courier New; */
    font-family:YaHei Mono;
    /* 內文字型大小 */
    font-size: 20px;
    font-weight: normal; /* normal,bold,100,..,900 */
    font-style: normal; /* normal,italic,oblique */
}

QLabel {
    font-family:YaHei Mono;'CherryPy', 'pytz', 'mako', 'beautifulsoup4', 'pymysql', 'peewee'
    /* 下方的 Minibuffer 標題字型大小 */
    font-size: 20px;
    font-weight: normal; /* normal,bold,100,..,900 */
    font-style: normal; /* normal,italic,oblique */
}

/* Editor labels */
QLineEdit#editorLabel {
    background-color: #ffffec;
    font-family:YaHei Mono;
    /* 沒有直接對應字型大小 */
    font-size: 20px;
    font-weight: normal; /* normal,bold,100,..,900 */
    font-style: normal; /* normal,italic,oblique */
    border: 2px;
    margin: 2px;
}</t>
<t tx="yen.20170108171605.3">horizontal: body pane to the left
vertical: body pane on the botton</t>
<t tx="yen.20170108171622.1">2017 Spring WCM 機械設計工程系網際內容管理

倉儲位置: https://github.com/mdecourse/2017springwcm

每一協同成員都應該要在 users 目錄下有一個 Leo 檔案

</t>
<t tx="yen.20170108171733.1"></t>
<t tx="yen.20170108171733.10">&lt;head&gt;
    &lt;meta charset="utf-8"&gt;
&lt;title&gt;
2017 Spring 機械設計工程系網際內容管理
&lt;/title&gt;
    &lt;meta name="description" content="A framework for easily creating beautiful presentations using HTML"&gt;
    &lt;meta name="author" content="Hakim El Hattab"&gt;
    
    &lt;meta name="apple-mobile-web-app-capable" content="yes"&gt;
    &lt;meta name="apple-mobile-web-app-status-bar-style" content="black-translucent"&gt;
    
    &lt;meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no"&gt;
    
    &lt;link rel="stylesheet" href="https://cad-lab.github.io/cadlab_data/reveal/css/reveal.css"&gt;
    &lt;link rel="stylesheet" href="https://cad-lab.github.io/cadlab_data/reveal/css/theme/black.css" id="theme"&gt;
    
    &lt;!-- Theme used for syntax highlighting of code --&gt;
    &lt;link rel="stylesheet" href="https://cad-lab.github.io/cadlab_data/reveal/lib/css/zenburn.css"&gt;

    &lt;!-- Printing and PDF exports --&gt;
    &lt;script&gt;
        var link = document.createElement( 'link' );
        link.rel = 'stylesheet';
        link.type = 'text/css';
        link.href = window.location.search.match( /print-pdf/gi ) ? 'https://cad-lab.github.io/cadlab_data/reveal/css/print/pdf.css' : 'https://cad-lab.github.io/cadlab_data/reveal/css/print/paper.css';
        document.getElementsByTagName( 'head' )[0].appendChild( link );
    &lt;/script&gt;

    &lt;!--[if lt IE 9]&gt;
    &lt;script src="https://cad-lab.github.io/cadlab_data/reveal/lib/js/html5shiv.js"&gt;&lt;/script&gt;
    &lt;![endif]--&gt;
&lt;/head&gt;

</t>
<t tx="yen.20170108171733.11">&lt;body&gt;
@others
&lt;script src="https://cad-lab.github.io/cadlab_data/reveal/lib/js/head.min.js"&gt;&lt;/script&gt;
&lt;script src="https://cad-lab.github.io/cadlab_data/reveal/js/reveal.js"&gt;&lt;/script&gt;
&lt;script&gt;
        // More info https://github.com/hakimel/reveal.js#configuration
        Reveal.initialize({
            controls: true,
            progress: true,
            history: true,
            center: true,

            transition: 'slide', // none/fade/slide/convex/concave/zoom

            // More info https://github.com/hakimel/reveal.js#dependencies
            dependencies: [
                { src: 'https://cad-lab.github.io/cadlab_data/reveal/lib/js/classList.js', condition: function() { return !document.body.classList; } },
                { src: 'https://cad-lab.github.io/cadlab_data/reveal/plugin/markdown/marked.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } },
                { src: 'https://cad-lab.github.io/cadlab_data/reveal/plugin/markdown/markdown.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } },
                { src: 'https://cad-lab.github.io/cadlab_data/reveal/plugin/highlight/highlight.js', async: true, callback: function() { hljs.initHighlightingOnLoad(); } },
                { src: 'https://cad-lab.github.io/cadlab_data/reveal/plugin/zoom-js/zoom.js', async: true },
                { src: 'https://cad-lab.github.io/cadlab_data/reveal/plugin/notes/notes.js', async: true },
                { src: 'https://cad-lab.github.io/cadlab_data/reveal/plugin/math/math.js', async: true }
            ]
        });
&lt;/script&gt;
&lt;/body&gt;
</t>
<t tx="yen.20170108171733.12">&lt;div class="reveal"&gt;
@others
&lt;/div&gt;

</t>
<t tx="yen.20170108171733.13">&lt;!-- Any section element inside of this container is displayed as a slide --&gt;
&lt;div class="slides"&gt;
@others
&lt;/div&gt;

</t>
<t tx="yen.20170108171733.14">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;


						
</t>
<t tx="yen.20170108171733.15"># 2017 網際內容管理
##40523139 劉育彤

### 


&lt;small&gt;
Created by me
&lt;/small&gt;

[vimeo](https://vimeo.com/user58915964)

[wiki](https://github.com/s40523139/2017springwcm_hw)

[blog](https://s40523139.github.io/2017springwcm_hw/blog/)
</t>
<t tx="yen.20170108171733.16">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;


						
</t>
<t tx="yen.20170108171733.17">###virtualbox中啟動 stunnel

sudo apt install stunnel4 -y 安裝 stunnel

sudo vi /etc/environment 設定環境

案O 並輸入[HTTPS=on]  

案esc 在案 :wq 改寫並離開

 sudo vi /etc/default/stunnel4  設定 stunnel

找到ENABLED=0(改成1)

stunnel.conf

sudo openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout localhost.key -out localhost.crt


</t>
<t tx="yen.20170108171733.2">@language python
import os
#os.system("pelican content -o output -s local_publishconf.py -t theme/pelican-bootstrap3")
os.system("pelican content -o blog -s local_publishconf.py")
g.es("admin pelican 近端執行完畢")


</t>
<t tx="yen.20170108171733.5"></t>
<t tx="yen.20170108171733.64">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;</t>
<t tx="yen.20170108171733.65">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="yen.20170108171733.66">###在 ubuntu 中安裝 nginx 伺服
 sudo apt update 更新

 sudo rm /var/lib/dkpg/lock 解開 /var/lib/dkpg/ 的 lock

sudo apt upate 確認是否最新

sudo apt install nginx 安裝 nginx

cd /var/www/html 進入

sudo vi index.nginx-debian.html 修改</t>
<t tx="yen.20170108171733.67">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="yen.20170108171733.68">###在近端啟動 CMsimfly
先查 ip用 ipconfig

用 scite 把wsgi.py 打開 把 ip 改成自己的

步驟 : cd tmp -&gt; cd CMsimfly -&gt; pyhton wsgi.py

打開leo 把wsgi.py的檔案打開 可以修改CMsimfly的內容</t>
<t tx="yen.20170108171733.71"></t>
<t tx="yen.20170108171733.8">@language xml
@tabwidth -4
@others

</t>
<t tx="yen.20170108171733.81"></t>
<t tx="yen.20170108171733.83">sudo openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout localhost.key -out localhost.crt

</t>
<t tx="yen.20170108171733.9">&lt;!doctype html&gt;
&lt;html lang="en"&gt;
@others
&lt;/html&gt;
</t>
<t tx="yen.20170108171930.1">@language python
import os
import subprocess
import threading
import http.server, ssl

def domake():
    # build directory
    os.chdir("./../")
    server_address = ('localhost', 5443)
    httpd = http.server.HTTPServer(server_address, http.server.SimpleHTTPRequestHandler)
    httpd.socket = ssl.wrap_socket(httpd.socket,
                                   server_side=True,
                                   certfile='localhost.crt',
                                   keyfile='localhost.key',
                                   ssl_version=ssl.PROTOCOL_TLSv1)
    print(os.getcwd())
    print("5443 https server started")
    httpd.serve_forever()

# 利用執行緒執行 https 伺服器
make = threading.Thread(target=domake)
make.start()</t>
<t tx="yen.20170108171939.1">@language python
import os
import subprocess
import threading
import socket
import http.server, ssl

class HTTPServerV6(http.server.HTTPServer):
    address_family = socket.AF_INET6
  
def domake():
    # build directory
    os.chdir("./../")
    ipv6_address = '2001:288:6004:17:3004::808'
    server_address = (ipv6_address, 6443)
    #httpd = http.server.HTTPServer(server_address, http.server.SimpleHTTPRequestHandler)
    httpd = HTTPServerV6(server_address, http.server.SimpleHTTPRequestHandler)
    httpd.socket = ssl.wrap_socket(httpd.socket,
                                   server_side=True,
                                   certfile='localhost.crt',
                                   keyfile='localhost.key',
                                   ssl_version=ssl.PROTOCOL_TLSv1)
    print("6443 https server started")
    httpd.serve_forever()

# 利用執行緒執行 https 伺服器
make = threading.Thread(target=domake)
make.start()</t>
<t tx="yen.20170224232341.1"></t>
<t tx="yen.20170224232341.2"></t>
</tnodes>
</leo_file>
